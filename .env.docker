# ================================================================================================
# DOCKER COMPOSE ENVIRONMENT VARIABLES
# ================================================================================================
# 
# ⚠️  SECURITY NOTICE: These are DEVELOPMENT-ONLY values for Docker Compose.
# ⚠️  These values are designed to work with the services defined in docker-compose.yml
# ⚠️  DO NOT use these values in production environments.
# ⚠️  This file can be safely committed as it contains no production secrets.
#
# Purpose: Provide working configuration for local Docker development
# Status: DEVELOPMENT VALUES ONLY - Safe for version control
# ================================================================================================

# ------------------------------------------------------------------------------------------------
# SERVER CONFIGURATION (Docker Development)
# ------------------------------------------------------------------------------------------------
AUTH_SERVER_ENVIRONMENT=development
AUTH_SERVER_HOST=0.0.0.0
AUTH_SERVER_PORT=8080

# ------------------------------------------------------------------------------------------------
# DATABASE CONFIGURATION (Docker PostgreSQL Service)
# ------------------------------------------------------------------------------------------------
# These match the postgres service in docker-compose.yml
AUTH_DATABASE_HOST=postgres
AUTH_DATABASE_PORT=5432
AUTH_DATABASE_NAME=auth_db
AUTH_DATABASE_USER=postgres
AUTH_DATABASE_PASSWORD=postgres
AUTH_DATABASE_SSL_MODE=disable

# ------------------------------------------------------------------------------------------------
# REDIS CONFIGURATION (Docker Redis Service)
# ------------------------------------------------------------------------------------------------
# These match the redis service in docker-compose.yml
AUTH_REDIS_HOST=redis
AUTH_REDIS_PORT=6379
AUTH_REDIS_PASSWORD=redis123
AUTH_REDIS_DB=0

# ------------------------------------------------------------------------------------------------
# JWT & CRYPTOGRAPHY CONFIGURATION (Development)
# ------------------------------------------------------------------------------------------------
# Development-only encryption key - NEVER use in production
AUTH_AUTH_MASTER_ENCRYPTION_KEY=dev-key-32-bytes-change-in-prod!!
AUTH_AUTH_JWT_ISSUER=auth-server-dev
AUTH_AUTH_JWT_AUDIENCE=auth-clients-dev
AUTH_AUTH_ACCESS_TOKEN_EXPIRY=15m
AUTH_AUTH_REFRESH_TOKEN_EXPIRY=720h

# ------------------------------------------------------------------------------------------------
# SECURITY CONFIGURATION (Relaxed for Development)
# ------------------------------------------------------------------------------------------------
# Relaxed settings for easier local development
AUTH_SECURITY_RATE_LIMIT_REQUESTS=1000
AUTH_SECURITY_MAX_LOGIN_ATTEMPTS=10
AUTH_SECURITY_PASSWORD_MIN_LENGTH=8
AUTH_SECURITY_LOCKOUT_DURATION=5m

# ------------------------------------------------------------------------------------------------
# GOOGLE OAUTH CONFIGURATION (Development - Optional)
# ------------------------------------------------------------------------------------------------
# Leave empty for local development, or add your dev Google OAuth credentials
AUTH_GOOGLE_CLIENT_ID=
AUTH_GOOGLE_CLIENT_SECRET=
AUTH_GOOGLE_REDIRECT_URL=http://localhost:8080/auth/google/callback

# ------------------------------------------------------------------------------------------------
# LDAP CONFIGURATION (Development - Optional)
# ------------------------------------------------------------------------------------------------
# Leave empty for local development, or configure test LDAP server
AUTH_LDAP_HOST=
AUTH_LDAP_PORT=389
AUTH_LDAP_BASE_DN=
AUTH_LDAP_BIND_DN=
AUTH_LDAP_BIND_PASSWORD=
AUTH_LDAP_ADMIN_GROUP=admin

# ================================================================================================
# USAGE INSTRUCTIONS
# ================================================================================================
#
# To use with Docker Compose:
#   docker-compose --env-file .env.docker up
#
# Or load in your shell:
#   export $(cat .env.docker | xargs)
#   docker-compose up
#
# Note: docker-compose.yml already includes these values in the environment section,
# so this file is optional for basic Docker development.
#
# ================================================================================================